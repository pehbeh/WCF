/*
 * Special styles for changes introduced in WoltLab Suite 3.1 that
 * are not compatible with styles created for earlier versions.
 */
@include requireApiVersion(31) {
	.main {
		@include screen-lg {
			padding: 30px 0;
		}
	}

	// reduced margin-top
	.paginationTop {
		margin-top: 30px;
	}

	// sheet-like presentation of content containers
	.content > .section,
	.content > form,
	.sectionContainer,
	.boxesContentTop .box,
	.boxesContentBottom .box {
		border: 1px solid var(--wcfContentContainerBorder);
		border-radius: var(--wcfBorderRadius);
		background-color: var(--wcfContentContainerBackground);
		padding: 20px;

		@include screen-sm-down {
			padding: 10px;
		}

		> .section:first-child {
			margin-top: 0;
		}

		.section {
			&:not(:first-child) {
				margin-top: 0;
			}

			& + .section {
				margin-top: 40px;
			}
		}
	}

	.content > .section + .sectionContainer,
	.content > form + .sectionContainer {
		margin-top: 40px;
	}

	.content > form {
		margin-top: 40px;
	}

	.contentHeader + .section,
	.contentHeader + form,
	.contentHeader + .sectionContainer {
		margin-top: 30px;
	}

	.content > .section .tabMenuContent > .section:first-child,
	.content > .section .tabMenuContent > form > .section:first-child {
		margin-top: 20px;
	}

	// borders used to visually separate lists from adjacent containers
	.content > .section {
		> .messageList {
			border-top-width: 0;

			@include screen-sm-down {
				&:first-child {
					margin-top: -11px;
				}
			}

			> :first-child {
				padding-top: 0;

				// 30px added to account for `padding-top: 0` above
				&.anchorFixedHeader:target:not(.disableAnchorFixedHeader) {
					margin-top: -79px;

					&::after {
						height: 80px;
					}

					> .message {
						transform: translateY(79px);
					}

					@include screen-xs {
						margin-top: -60px;

						&::after {
							height: 50px;
						}

						> .message {
							transform: translateY(49px);
						}
					}
				}
			}

			> :last-child {
				border-bottom-width: 0;
				padding-bottom: 0;
			}
		}

		> .tabularList:last-child {
			border-bottom-width: 0;
		}

		> .containerList {
			> :first-child {
				border-top-width: 0;
			}

			> :last-child {
				border-bottom-width: 0;
			}
		}
	}

	// drop-shadow for submenu lists
	.mainMenu .boxMenu .boxMenuDepth1 {
		box-shadow: var(--wcfBoxShadow);
	}

	// adjust editor and message tab menu background color
	.messageTabMenuNavigation > ul,
	.messageTabMenu > .messageTabMenuContent.active,
	.messageContent.loading > .messageContentLoadingOverlay {
		background-color: var(--wcfContentContainerBackground);
	}

	.messageTabMenuNavigation > ul > li.active > a::after,
	.messageTabMenuNavigation > ul > li.active > button::after {
		border-bottom-color: var(--wcfContentContainerBackground);
	}

	// use the `alert` variables rather than fixed values
	.innerError {
		background-color: var(--wcfStatusErrorBackground);
		color: var(--wcfStatusErrorText);

		&::before {
			border-bottom-color: var(--wcfStatusErrorBackground);
		}
	}

	// adjust color values to account for a significant darker sidebar background
	.sidebar,
	.messageSidebar {
		dl:not(.plain) > dt,
		dl.dataList > dt,
		.separatorLeft::before {
			color: var(--wcfSidebarDimmedText);
		}
	}
	.messageReduced {
		.messageTitle a {
			color: var(--wcfSidebarText);
		}

		.messageHeaderMetaData {
			.messagePublicationTime,
			> li:not(:last-child)::after {
				color: var(--wcfSidebarDimmedText);
			}
		}
	}
	.ck.ck-content .mention,
	.userMention {
		color: var(--wcfSidebarLink);

		&:hover {
			color: var(--wcfSidebarLinkActive);
		}
	}
	.boxesSidebarLeft .box,
	.boxesSidebarRight .box {
		&.boxError,
		&.boxInfo,
		&.boxSuccess,
		&.boxWarning {
			.boxTitle {
				color: inherit;
			}
		}
	}

	// tab menu overflow
	.tabMenuOverlayLeft {
		background: linear-gradient(
			to left,
			rgba(var(--wcfContentContainerBackground-rgb) / 0) 0%,
			var(--wcfContentContainerBackground) 50%
		);
	}
	.tabMenuOverlayRight {
		background: linear-gradient(
			to right,
			rgba(var(--wcfContentContainerBackground-rgb) / 0) 0%,
			var(--wcfContentContainerBackground) 50%
		);
	}

	// background-color when saving messages
	.messageContent.loading > .messageContentLoadingOverlay {
		background-color: var(--wcfContentContainerBackground);
	}
}
