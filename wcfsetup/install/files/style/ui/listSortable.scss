.sortableList:not(.tabularList) {
	list-style: decimal outside;
	margin-left: 20px;

	.sortableList {
		margin-left: 30px;
	}
}

.sortableNode {
	cursor: move;

	&:not(:last-child) {
		border-bottom: 1px solid var(--wcfContentBorderInner);
	}

	> .sortableList {
		//padding-left: 20px;

		&:not(:empty) {
			border-top: 1px solid var(--wcfContentBorderInner);
		}
	}
}

.sortableNodeLabel {
	align-items: center;
	padding: 10px;

	/* `display:flex` acts weird inside lists with a visible list-style */
	display: inline-flex;
	width: 100%;

	&:hover {
		background-color: var(--wcfTabularBoxBackgroundActive);
	}

	&:not(.sortableNodeStaticItem) {
		cursor: move;
	}

	> .icon,
	> a {
		margin-right: 5px;
	}

	> .icon {
		flex: 0 0 auto;
	}

	> a {
		flex: 0 1 auto;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	> .statusDisplay {
		align-items: center;
		display: flex;
		flex: 1 0 auto;
		justify-content: flex-end;

		> a,
		> button,
		> span {
			flex: 0 0 auto;
			margin-left: 5px;
		}

		fa-icon {
			color: var(--wcfContentText);
		}
	}
}

.sortablePlaceholder {
	background-color: var(--wcfStatusWarningBackground);
	border: 1px solid var(--wcfStatusWarningBorder);
	color: var(--wcfStatusWarningText);

	&.sortableInvalidTarget {
		background-color: var(--wcfStatusErrorBackground);
		border-color: var(--wcfStatusErrorBorder);
		color: var(--wcfStatusErrorText);
	}

	.sortableNodeLabel, &:is(tr):hover > td {
		background-color: transparent;
	}
}

.table tr.sortablePlaceholder:hover > td {
	background-color: transparent;
}

@include screen-xs {
	.sortableNodeHandle {
		display: none;
	}
}
@include screen-lg {
	.sortableNodeHandle {
		display: none;
	}
}
